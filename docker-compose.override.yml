services:
  keycloak.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  identitydb:
    image: postgres:alpine
    container_name: identitydb
    environment:
    - POSTGRES_USER=bale
    - POSTGRES_PASSWORD=bale
    - POSTGRES_DB=IdentityDb
    restart: always
    ports:
    - "5432:5432"
    volumes:
    - postgres_identity:/var/lib/postgresql/data/

  keycloak.server:
      container_name: keycloak.server
      command:
          [
              'start-dev',
              '--import-realm',
              '--log-level=DEBUG,org.hibernate:info,org.keycloak.transaction.JtaTransactionWrapper:info,org.keycloak.services.scheduled.ScheduledTaskRunner:info',
              '--log-console-color=true'
          ]
      environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      restart: always
      volumes:
      - ./Keycloak.IdentityServer/KeycloakConfiguration/:/opt/keycloak/data/import/
      ports:
      - "8080:8080"

  keycloak.server.byhand:
      container_name: keycloak.server.byhand
      command:
          [
              'start-dev',
              '--import-realm',
              '--log-level=DEBUG,org.hibernate:info,org.keycloak.transaction.JtaTransactionWrapper:info,org.keycloak.services.scheduled.ScheduledTaskRunner:info',
              '--log-console-color=true'
          ]
      environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://identitydb:5432/IdentityDb
      - KC_DB_USERNAME=bale
      - KC_DB_PASSWORD=bale
      restart: always
      depends_on:
      - identitydb
      # volumes:
      # - ./Keycloak.IdentityServer/KeycloakConfiguration/:/opt/keycloak/data/import/
      ports:
      - "17070:8080"

volumes:
  postgres_identity:
